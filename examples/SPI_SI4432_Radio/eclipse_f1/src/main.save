#include "gpio_cpp.h"
#include "RCC_Helper.h"
#include "usart_cpp.h"
#include "GPIO_Helper.h"
#include "fp2.h"
#include "si4432.h"

static void uart()
{
    uint32_t clockSpeed = 400000;
    USART* usart = GPIO_Helper::SetupUSART2_PA_2_3(clockSpeed);
    unsigned char buf[1024];

    while(1)
    {
        while (!usart->IsRXNE())
            ;

        {
            if (usart->Receive() == 23)
            {
                ///for (uint16_t i = 257; i < 64; ++i)
                 usart->SendDWord(fix16_from_dbl(-31000.12345));

                //break;
            }
        }

    }
    while(1)
        ;
}

static void radio()
{
    GPIOA::GetInstance()->EnablePeripheralClock(true);
    GPIOB::GetInstance()->EnablePeripheralClock(true);

    SPI* spi = GPIO_Helper::SetupSPI2_MasterMode_PB_13_14_15(false, false, SPI_BAUD_RATE_32);
    GPIO_PIN* ssPin = GPIOB::GetInstance()->GetPin(GPIO_PIN2);
    ssPin->SetupGPIO_OutPP();

    GPIO_PIN* sdnPin = GPIOB::GetInstance()->GetPin(GPIO_PIN10);
    sdnPin->SetupGPIO_OutPP();


    Si4432 radio(spi, ssPin, sdnPin, 0);
    radio.init();
    radio.setBaudRate(30);
    radio.setFrequency(433);
    radio.readAll();

    //TX
    uint8_t data[10] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};

    while(1)
    {
        while (!radio.sendPacket(sizeof data, data))
            ;

        RCC_Delay_ms(1000);
    }

}


//Old board, has Radio (si4432), pressure sensor
int main()
{
    RCC_EnableHSI_64Mhz_AHB_32Mhz_APB1_16MHz_APB2_16MHz();
    //uart();
    radio();
}
